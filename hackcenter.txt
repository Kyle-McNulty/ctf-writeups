Getting Started!
 Not much to this one. Click on Hints, copy and paste the key.

givekey
 Basic netcat command suffices `$nc enigma2017.hackcenter.com 21110`

readasm
 This one takes a little bit of knowledge of assembly. The 4th command separates esp 0x60, and the 5th command separates esp an additional 0x4. This totals up to 0x64 which is 100 in decimal.

xxdme
 This is a basic forensic problem. Download the file, then run the command `$xxd <myfile>`. The last bytes of data in the file include the key

EBG13
 This one shows a lot of letters, so first guess is a caesar cipher. I ran the script in my 'scripts' directory on github to determine it was 13 (though the name of the problemalso suggests that). 

kolmogorov
 This tests basic knowledge of communicating with a remote server. I used the python interpreter and sent and received data using a socket connection.

sshkey
 I followed this tutorial "https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2" but used scp instead of ssh-copy because I was facing issues.

asmtosie 0
 This one was pretty fun for me. I didn't have much knowledge of C, so I did some brief lessons on "http://www.learn-c.org/". At the top, the function is described as "int testb(int)". Then in the assembly we can see there are 8 bytes assigned for eax. Then eax is used in a multiplication function with the number -1162764655. So the solution stores the result of the multiplication and returns it. To see my code, check out my asmtosie.c file.

crashme1
 
